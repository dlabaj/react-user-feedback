{
    "sourceFile": "packages/module/src/Feedback/FeedbackModal.tsx",
    "activeCommit": 0,
    "commits": [
        {
            "activePatchIndex": 72,
            "patches": [
                {
                    "date": 1677002650875,
                    "content": "Index: \n===================================================================\n--- \n+++ \n"
                },
                {
                    "date": 1677005181333,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback. */\n-    onShareFeedback: string | \"() => void\";\n+    onShareFeedback: string;\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose?: () => void;\n"
                },
                {
                    "date": 1677005542591,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback. */\n-    onShareFeedback: string;\n+    onShareFeedback: string | \"() => void\";\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose?: () => void;\n"
                },
                {
                    "date": 1677005554186,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,11 @@\n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback. */\n-    onShareFeedback: string | \"() => void\";\n+    onShareFeedback: string async (params:type) => {\n+        | \"() => void\"\n+    };\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose?: () => void;\n"
                },
                {
                    "date": 1677005559729,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback. */\n-    onShareFeedback: string async (params:type) => {\n+    onShareFeedback: string| async (params:type) => {\n         | \"() => void\"\n     };\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n"
                },
                {
                    "date": 1677005573906,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback. */\n-    onShareFeedback: string| async (params:type) => {\n+    onShareFeedback: string| async () => {\n         | \"() => void\"\n     };\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n"
                },
                {
                    "date": 1677005579278,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,9 @@\n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback. */\n-    onShareFeedback: string| async () => {\n-        | \"() => void\"\n+    onShareFeedback: string| async () => {\"() => void\"\n     };\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n"
                },
                {
                    "date": 1677005585355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,10 +6,9 @@\n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback. */\n-    onShareFeedback: string| async () => {\"() => void\"\n-    };\n+    onShareFeedback: string| async () => ;\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose?: () => void;\n"
                },
                {
                    "date": 1677005612827,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback. */\n-    onShareFeedback: string| async () => ;\n+    onShareFeedback: string| () => {};\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose?: () => void;\n"
                },
                {
                    "date": 1677005618183,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback. */\n-    onShareFeedback: string| () => {};\n+    onShareFeedback: string| \"() => {}\";\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose?: () => void;\n"
                },
                {
                    "date": 1677005808733,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,8 +13,9 @@\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose?: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n+    \n };\n \n /**\n  * Creates an instance of the feedback modal.\n"
                },
                {
                    "date": 1677005814655,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose?: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n-    \n+    /** */\n };\n \n /**\n  * Creates an instance of the feedback modal.\n"
                },
                {
                    "date": 1677005821901,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,8 +14,9 @@\n     onClose?: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /** */\n+    onFeed\n };\n \n /**\n  * Creates an instance of the feedback modal.\n"
                },
                {
                    "date": 1677005831042,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -10,13 +10,13 @@\n     onShareFeedback: string| \"() => {}\";\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n-    onClose?: () => void;\n+    onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /** */\n-    onFeed\n+    onFeedba\n };\n \n /**\n  * Creates an instance of the feedback modal.\n"
                },
                {
                    "date": 1677005836327,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /** */\n-    onFeedba\n+    onFeedbackSubmit\n };\n \n /**\n  * Creates an instance of the feedback modal.\n"
                },
                {
                    "date": 1677005857571,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /** */\n-    onFeedbackSubmit\n+    onSubmitFeedbackSubmit\n };\n \n /**\n  * Creates an instance of the feedback modal.\n"
                },
                {
                    "date": 1677005863328,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /** */\n-    onSubmitFeedbackSubmit\n+    onSubmitFeedback\n };\n \n /**\n  * Creates an instance of the feedback modal.\n"
                },
                {
                    "date": 1677005875032,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,10 +13,10 @@\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n-    /** */\n-    onSubmitFeedback\n+    /** Optional */\n+    onSubmitFeedback?: \n };\n \n /**\n  * Creates an instance of the feedback modal.\n"
                },
                {
                    "date": 1677005880995,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n-    /** Optional */\n+    /** Optional call back that */\n     onSubmitFeedback?: \n };\n \n /**\n"
                },
                {
                    "date": 1677005899921,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n-    /** Optional call back that */\n+    /** Optional callback */\n     onSubmitFeedback?: \n };\n \n /**\n"
                },
                {
                    "date": 1677005911553,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n-    /** Optional callback */\n+    /** */\n     onSubmitFeedback?: \n };\n \n /**\n"
                },
                {
                    "date": 1677005919167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /** */\n-    onSubmitFeedback?: \n+    onSubmitFeedback: \n };\n \n /**\n  * Creates an instance of the feedback modal.\n"
                },
                {
                    "date": 1677005924539,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /** */\n-    onSubmitFeedback: \n+    onSubmitFeedback: string|\n };\n \n /**\n  * Creates an instance of the feedback modal.\n"
                },
                {
                    "date": 1677005932319,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /** */\n-    onSubmitFeedback: string|\n+    onSubmitFeedback: string| \"()\"\n };\n \n /**\n  * Creates an instance of the feedback modal.\n"
                },
                {
                    "date": 1677005937694,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /** */\n-    onSubmitFeedback: string| \"()\"\n+    onSubmitFeedback: string| \"()=>{}\"\n };\n \n /**\n  * Creates an instance of the feedback modal.\n"
                },
                {
                    "date": 1677005949332,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n-    /**  URL as a string or a function to handle what should be done when clicking on user feedback. */\n+    /**  URL as a string or a function to handle what should be done when clicking on user feedback . */\n     onShareFeedback: string| \"() => {}\";\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n"
                },
                {
                    "date": 1677005955716,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n-    /**  URL as a string or a function to handle what should be done when clicking on user feedback . */\n+    /**  URL as a string or a function to handle what should be done when clicking on user feedback screen. */\n     onShareFeedback: string| \"() => {}\";\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n"
                },
                {
                    "date": 1677005963526,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n-    /**  URL as a string or a function to handle what should be done when clicking on user feedback screen. */\n+    /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the */\n     onShareFeedback: string| \"() => {}\";\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n"
                },
                {
                    "date": 1677005973297,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n-    /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the */\n+    /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will show  */\n     onShareFeedback: string| \"() => {}\";\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n"
                },
                {
                    "date": 1677005982594,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n-    /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will show  */\n+    /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen */\n     onShareFeedback: string| \"() => {}\";\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n"
                },
                {
                    "date": 1677005997713,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,17 +5,17 @@\n \n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n-    /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen */\n+    /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onShareFeedback: string| \"() => {}\";\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n-    /** */\n+    /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onSubmitFeedback: string| \"()=>{}\"\n };\n \n /**\n"
                },
                {
                    "date": 1677006079861,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n-    onSubmitFeedback: string| \"()=>{}\"\n+    onFeedback: string| \"()=>{}\"\n };\n \n /**\n  * Creates an instance of the feedback modal.\n"
                },
                {
                    "date": 1677006086893,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n-    onFeedback: string| \"()=>{}\"\n+    onJoinMailingListFeedback: string| \"()=>{}\"\n };\n \n /**\n  * Creates an instance of the feedback modal.\n"
                },
                {
                    "date": 1677006096335,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,11 @@\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n-    onJoinMailingListFeedback: string| \"()=>{}\"\n+    onJoinMailingList: string| \"()=>{}\"\n+        /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n+        onJoinMailingList: string| \"()=>{}\"\n };\n \n /**\n  * Creates an instance of the feedback modal.\n"
                },
                {
                    "date": 1677006101391,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,10 @@\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onJoinMailingList: string| \"()=>{}\"\n-        /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n-        onJoinMailingList: string| \"()=>{}\"\n+    /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n+    onJoinMailingList: string| \"()=>{}\"\n };\n \n /**\n  * Creates an instance of the feedback modal.\n"
                },
                {
                    "date": 1677006113452,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -16,9 +16,9 @@\n     feedbackLocal?: FeedbackLocale;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onJoinMailingList: string| \"()=>{}\"\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n-    onJoinMailingList: string| \"()=>{}\"\n+    onReportABugList: string| \"()=>{}\"\n };\n \n /**\n  * Creates an instance of the feedback modal.\n"
                },
                {
                    "date": 1677006121782,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,10 +15,10 @@\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onJoinMailingList: string| \"()=>{}\"\n-    /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n-    onReportABugList: string| \"()=>{}\"\n+    /**  URL as a string or a function to handle what should be done when clicking on user re screen.  If a URL is given the feedback modal will not use the feedback screen. */\n+    onReportABug: string| \"()=>{}\"\n };\n \n /**\n  * Creates an instance of the feedback modal.\n"
                },
                {
                    "date": 1677006134222,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onJoinMailingList: string| \"()=>{}\"\n-    /**  URL as a string or a function to handle what should be done when clicking on user re screen.  If a URL is given the feedback modal will not use the feedback screen. */\n+    /**  URL as a string or a function to handle what should be done when clicking on user report a bug.  If a URL is given the feedback modal will not use the feedback screen. */\n     onReportABug: string| \"()=>{}\"\n };\n \n /**\n"
                },
                {
                    "date": 1677006139355,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onJoinMailingList: string| \"()=>{}\"\n-    /**  URL as a string or a function to handle what should be done when clicking on user report a bug.  If a URL is given the feedback modal will not use the feedback screen. */\n+    /**  URL as a string or a function to handle what should be done when clicking on report a bug.  If a URL is given the feedback modal will not use the feedback screen. */\n     onReportABug: string| \"()=>{}\"\n };\n \n /**\n"
                },
                {
                    "date": 1677006159944,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onJoinMailingList: string| \"()=>{}\"\n-    /**  URL as a string or a function to handle what should be done when clicking on report a bug.  If a URL is given the feedback modal will not use the feedback screen. */\n+    /**  URL as a string or a function to handle what should be done when clicking on report a bug int.  If a URL is given the feedback modal will not use the feedback screen. */\n     onReportABug: string| \"()=>{}\"\n };\n \n /**\n"
                },
                {
                    "date": 1677006168873,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onJoinMailingList: string| \"()=>{}\"\n-    /**  URL as a string or a function to handle what should be done when clicking on report a bug int.  If a URL is given the feedback modal will not use the feedback screen. */\n+    /**  URL as a string or a function to handle what should be done when clicking on report a bug in the report a bug screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onReportABug: string| \"()=>{}\"\n };\n \n /**\n"
                },
                {
                    "date": 1677006183187,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onJoinMailingList: string| \"()=>{}\"\n-    /**  URL as a string or a function to handle what should be done when clicking on report a bug in the report a bug screen.  If a URL is given the feedback modal will not use the feedback screen. */\n+    /**  URL as a string or a function to handle what should be done when clicking on report a bug in the report a bug screen.  If a URL is given the report a bug will  modal will not use the feedback screen. */\n     onReportABug: string| \"()=>{}\"\n };\n \n /**\n"
                },
                {
                    "date": 1677006190249,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onJoinMailingList: string| \"()=>{}\"\n-    /**  URL as a string or a function to handle what should be done when clicking on report a bug in the report a bug screen.  If a URL is given the report a bug will  modal will not use the feedback screen. */\n+    /**  URL as a string or a function to handle what should be done when clicking on report a bug in the report a bug screen.  If a URL is given the report a bug will redirect to a  modal will not use the feedback screen. */\n     onReportABug: string| \"()=>{}\"\n };\n \n /**\n"
                },
                {
                    "date": 1677006204132,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onJoinMailingList: string| \"()=>{}\"\n-    /**  URL as a string or a function to handle what should be done when clicking on report a bug in the report a bug screen.  If a URL is given the report a bug will redirect to a  modal will not use the feedback screen. */\n+    /**  URL as a string or a function to handle what should be done when clicking on report a bug in the report a bug screen.  If a URL is given the report a bug will redirect to another site to report the bug. modal will not use the feedback screen. */\n     onReportABug: string| \"()=>{}\"\n };\n \n /**\n"
                },
                {
                    "date": 1677006232446,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onJoinMailingList: string| \"()=>{}\"\n-    /**  URL as a string or a function to handle what should be done when clicking on report a bug in the report a bug screen.  If a URL is given the report a bug will redirect to another site to report the bug. modal will not use the feedback screen. */\n+    /**  If a URL is given the report a bug will redirect to another site to report the bug. modal will not use the feedback screen. */\n     onReportABug: string| \"()=>{}\"\n };\n \n /**\n"
                },
                {
                    "date": 1677006244254,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onJoinMailingList: string| \"()=>{}\"\n-    /**  If a URL is given the report a bug will redirect to another site to report the bug. modal will not use the feedback screen. */\n+    /**  If a URL is given the report a bug link will redirect to another site to report the bug. modal will not use the feedback screen. */\n     onReportABug: string| \"()=>{}\"\n };\n \n /**\n"
                },
                {
                    "date": 1677006256675,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onJoinMailingList: string| \"()=>{}\"\n-    /**  If a URL is given the report a bug link will redirect to another site to report the bug. modal will not use the feedback screen. */\n+    /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided modal will not use the feedback screen. */\n     onReportABug: string| \"()=>{}\"\n };\n \n /**\n"
                },
                {
                    "date": 1677006262937,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onJoinMailingList: string| \"()=>{}\"\n-    /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided modal will not use the feedback screen. */\n+    /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided  feedback screen. */\n     onReportABug: string| \"()=>{}\"\n };\n \n /**\n"
                },
                {
                    "date": 1677006278595,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onJoinMailingList: string| \"()=>{}\"\n-    /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided  feedback screen. */\n+    /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display  feedback screen. */\n     onReportABug: string| \"()=>{}\"\n };\n \n /**\n"
                },
                {
                    "date": 1677006294600,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onJoinMailingList: string| \"()=>{}\"\n-    /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display  feedback screen. */\n+    /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. */\n     onReportABug: string| \"()=>{}\"\n };\n \n /**\n"
                },
                {
                    "date": 1677006306113,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n-    /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n+    \n     onJoinMailingList: string| \"()=>{}\"\n     /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. */\n     onReportABug: string| \"()=>{}\"\n };\n"
                },
                {
                    "date": 1677006317764,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n-    \n+    /**  If a URL is given the  a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. */\n     onJoinMailingList: string| \"()=>{}\"\n     /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. */\n     onReportABug: string| \"()=>{}\"\n };\n"
                },
                {
                    "date": 1677006326868,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n-    /**  If a URL is given the  a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. */\n+    /**  If a URL is given the join mailing listlink will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. */\n     onJoinMailingList: string| \"()=>{}\"\n     /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. */\n     onReportABug: string| \"()=>{}\"\n };\n"
                },
                {
                    "date": 1677006335899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n-    /**  If a URL is given the join mailing listlink will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. */\n+    /**  If a URL is given the join mailing listlink will redirect to another site to join the mailing list the bug. If a function is provided we will display a feedback screen with a submit button. */\n     onJoinMailingList: string| \"()=>{}\"\n     /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. */\n     onReportABug: string| \"()=>{}\"\n };\n"
                },
                {
                    "date": 1677006342422,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n-    /**  If a URL is given the join mailing listlink will redirect to another site to join the mailing list the bug. If a function is provided we will display a feedback screen with a submit button. */\n+    /**  If a URL is given the join mailing list link will redirect to another site to join the mailing list. If a function is provided we will display a feedback screen with a submit button. */\n     onJoinMailingList: string| \"()=>{}\"\n     /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. */\n     onReportABug: string| \"()=>{}\"\n };\n"
                },
                {
                    "date": 1677006353135,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n-    /**  If a URL is given the join mailing list link will redirect to another site to join the mailing list. If a function is provided we will display a feedback screen with a submit button. */\n+    /**  If a URL is given the join mailing list link will redirect to another site to join the mailing list. If a function is provided we will display a join mailing list screen with a submit button. */\n     onJoinMailingList: string| \"()=>{}\"\n     /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. */\n     onReportABug: string| \"()=>{}\"\n };\n"
                },
                {
                    "date": 1677006374037,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,8 +5,9 @@\n \n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n+    \n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onShareFeedback: string| \"() => {}\";\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n"
                },
                {
                    "date": 1677006382657,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n-    \n+    /**  If a URL is given the join mailing list link will redirect to another site to join the mailing list. If a function is provided we will display a shescreen with a submit button. *\n     /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n     onShareFeedback: string| \"() => {}\";\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n"
                },
                {
                    "date": 1677006395642,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,10 +5,9 @@\n \n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n-    /**  If a URL is given the join mailing list link will redirect to another site to join the mailing list. If a function is provided we will display a shescreen with a submit button. *\n-    /**  URL as a string or a function to handle what should be done when clicking on user feedback screen.  If a URL is given the feedback modal will not use the feedback screen. */\n+    /**  If a URL is given the join mailing list link will redirect to another site to join the mailing list. If a function is provided we will display a share feedback screen with a submit button. *. */\n     onShareFeedback: string| \"() => {}\";\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n"
                },
                {
                    "date": 1677006408341,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n-    /**  If a URL is given the join mailing list link will redirect to another site to join the mailing list. If a function is provided we will display a share feedback screen with a submit button. *. */\n+    /**  If a URL is given the  mailijoinng list link will redirect to another site to join the mailing list. If a function is provided we will display a share feedback screen with a submit button. */\n     onShareFeedback: string| \"() => {}\";\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n"
                },
                {
                    "date": 1677006418159,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n-    /**  If a URL is given the  mailijoinng list link will redirect to another site to join the mailing list. If a function is provided we will display a share feedback screen with a submit button. */\n+    /**  If a URL is given the  share feedback link will redirect to another site to join the mailing list. If a function is provided we will display a share feedback screen with a submit button. */\n     onShareFeedback: string| \"() => {}\";\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n"
                },
                {
                    "date": 1677006426846,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -5,9 +5,9 @@\n \n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n-    /**  If a URL is given the  share feedback link will redirect to another site to join the mailing list. If a function is provided we will display a share feedback screen with a submit button. */\n+    /**  If a URL is given the  share feedback link will redirect to another site share feedback. If a function is provided we will display a share feedback screen with a submit button. */\n     onShareFeedback: string| \"() => {}\";\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n"
                },
                {
                    "date": 1677006446167,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,9 +14,9 @@\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  If a URL is given the join mailing list link will redirect to another site to join the mailing list. If a function is provided we will display a join mailing list screen with a submit button. */\n-    onJoinMailingList: string| \"()=>{}\"\n+    onJoinMailingList?: string| \"()=>{}\"\n     /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. */\n     onReportABug: string| \"()=>{}\"\n };\n \n"
                },
                {
                    "date": 1677006465430,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,12 +13,12 @@\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n-    /**  If a URL is given the join mailing list link will redirect to another site to join the mailing list. If a function is provided we will display a join mailing list screen with a submit button. */\n+    /**  If a URL is given the join mailing list link will redirect to another site to join the mailing list. If a function is provided we will display a join mailing list screen with a submit button. If it's undefined then th*/\n     onJoinMailingList?: string| \"()=>{}\"\n     /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. */\n-    onReportABug: string| \"()=>{}\"\n+    onReportABug?: string| \"()=>{}\"\n };\n \n /**\n  * Creates an instance of the feedback modal.\n"
                },
                {
                    "date": 1677006475078,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n-    /**  If a URL is given the join mailing list link will redirect to another site to join the mailing list. If a function is provided we will display a join mailing list screen with a submit button. If it's undefined then th*/\n+    /**  If a URL is given the join mailing list link will redirect to another site to join the mailing list. If a function is provided we will display a join mailing list screen with a submit button. If it's undefined then report a bug will be removed from */\n     onJoinMailingList?: string| \"()=>{}\"\n     /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. */\n     onReportABug?: string| \"()=>{}\"\n };\n"
                },
                {
                    "date": 1677006481896,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -13,9 +13,9 @@\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n-    /**  If a URL is given the join mailing list link will redirect to another site to join the mailing list. If a function is provided we will display a join mailing list screen with a submit button. If it's undefined then report a bug will be removed from */\n+    /**  If a URL is given the join mailing list link will redirect to another site to join the mailing list. If a function is provided we will display a join mailing list screen with a submit button. If it's undefined then report a bug will be removed from share feedback*/\n     onJoinMailingList?: string| \"()=>{}\"\n     /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. */\n     onReportABug?: string| \"()=>{}\"\n };\n"
                },
                {
                    "date": 1677006489490,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  If a URL is given the join mailing list link will redirect to another site to join the mailing list. If a function is provided we will display a join mailing list screen with a submit button. If it's undefined then report a bug will be removed from share feedback*/\n     onJoinMailingList?: string| \"()=>{}\"\n-    /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. */\n+    /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. If it's undefined then */\n     onReportABug?: string| \"()=>{}\"\n };\n \n /**\n"
                },
                {
                    "date": 1677006498895,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  If a URL is given the join mailing list link will redirect to another site to join the mailing list. If a function is provided we will display a join mailing list screen with a submit button. If it's undefined then report a bug will be removed from share feedback*/\n     onJoinMailingList?: string| \"()=>{}\"\n-    /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. If it's undefined then */\n+    /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. If it's undefined then join mailing list will be removed from */\n     onReportABug?: string| \"()=>{}\"\n };\n \n /**\n"
                },
                {
                    "date": 1677006511899,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -15,9 +15,9 @@\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  If a URL is given the join mailing list link will redirect to another site to join the mailing list. If a function is provided we will display a join mailing list screen with a submit button. If it's undefined then report a bug will be removed from share feedback*/\n     onJoinMailingList?: string| \"()=>{}\"\n-    /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. If it's undefined then join mailing list will be removed from */\n+    /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. If it's undefined then join mailing list will be removed from the share feedback modal*/\n     onReportABug?: string| \"()=>{}\"\n };\n \n /**\n"
                },
                {
                    "date": 1677008418063,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,16 +6,16 @@\n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n     /**  If a URL is given the  share feedback link will redirect to another site share feedback. If a function is provided we will display a share feedback screen with a submit button. */\n-    onShareFeedback: string| \"() => {}\";\n+    onShareFeedback: string | \"() => {}\";\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n-    /**  If a URL is given the join mailing list link will redirect to another site to join the mailing list. If a function is provided we will display a join mailing list screen with a submit button. If it's undefined then report a bug will be removed from share feedback*/\n+    /**  If a URL is given the join mailing list link will redirect to another site to join the mailing list. If a function is provided we will display a join mailing list screen with a submit button. If it's undefined then report a bug will be removed from share feedback modal*/\n     onJoinMailingList?: string| \"()=>{}\"\n     /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. If it's undefined then join mailing list will be removed from the share feedback modal*/\n     onReportABug?: string| \"()=>{}\"\n };\n"
                },
                {
                    "date": 1677008426367,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -14,11 +14,11 @@\n     onClose: () => void;\n     /** Optional prop to change the default english strings to a string of the user choice. */\n     feedbackLocal?: FeedbackLocale;\n     /**  If a URL is given the join mailing list link will redirect to another site to join the mailing list. If a function is provided we will display a join mailing list screen with a submit button. If it's undefined then report a bug will be removed from share feedback modal*/\n-    onJoinMailingList?: string| \"()=>{}\"\n+    onJoinMailingList?: string | \"()=>{}\"\n     /**  If a URL is given the report a bug link will redirect to another site to report the bug. If a function is provided we will display a feedback screen with a submit button. If it's undefined then join mailing list will be removed from the share feedback modal*/\n-    onReportABug?: string| \"()=>{}\"\n+    onReportABug?: string | \"()=>{}\"\n };\n \n /**\n  * Creates an instance of the feedback modal.\n"
                },
                {
                    "date": 1677008431978,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n     /**  If a URL is given the  share feedback link will redirect to another site share feedback. If a function is provided we will display a share feedback screen with a submit button. */\n-    onShareFeedback: string | \"() => {}\";\n+    onShareFeedback: string | ()) => {}\";\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose: () => void;\n"
                },
                {
                    "date": 1677008453517,
                    "content": "Index: \n===================================================================\n--- \n+++ \n@@ -6,9 +6,9 @@\n export interface FeedbackModalProps {\n     /** Email address for the user, if none is provided will default to asking for their email address. */\n     email?: string;\n     /**  If a URL is given the  share feedback link will redirect to another site share feedback. If a function is provided we will display a share feedback screen with a submit button. */\n-    onShareFeedback: string | ()) => {}\";\n+    onShareFeedback: string | \"() => {};\n     /** Indicates if the modal is visible or not. */\n     isOpen: boolean;\n     /** Optional call back that will be called when the user closes user feedback modal. */\n     onClose: () => void;\n"
                }
            ],
            "date": 1677002650875,
            "name": "Commit-0",
            "content": "import React from 'react';\nimport { FeedbackModalInternal } from './FeedbackModalInternal';\nimport { defaultFeedback, FeedbackLocale } from '../locales/Locale';\nimport { LocaleContext } from '../context/LocaleContext';\n\nexport interface FeedbackModalProps {\n    /** Email address for the user, if none is provided will default to asking for their email address. */\n    email?: string;\n    /**  URL as a string or a function to handle what should be done when clicking on user feedback. */\n    onShareFeedback: string | \"() => void\";\n    /** Indicates if the modal is visible or not. */\n    isOpen: boolean;\n    /** Optional call back that will be called when the user closes user feedback modal. */\n    onClose?: () => void;\n    /** Optional prop to change the default english strings to a string of the user choice. */\n    feedbackLocal?: FeedbackLocale;\n};\n\n/**\n * Creates an instance of the feedback modal.\n * \n * @param props \n * @returns \n */\nexport const FeedbackModal = (props: FeedbackModalProps) => <LocaleContext.Provider value={props.feedbackLocal ? props.feedbackLocal : defaultFeedback}\n    >\n        <FeedbackModalInternal {...props} />\n    </LocaleContext.Provider>\n\nexport default FeedbackModal;"
        }
    ]
}